<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.know.dao.BookDao">
    <select id="getBookByLikeOrder" resultType="java.util.Map">
        select book_id bookId,book_name bookName,book_type_id bookTypeId,author,
               book.create_time createTime,ifnull(l.likeNumber,0) likeNumber
        from
            (
                select liked_id,count(*) likeNumber
                from `like`
                where like_type = '1'
                group by liked_id
            ) l right join book on book_id = l.liked_id
        where book.status = '0'
        order by l.likeNumber desc
        limit 12
    </select>

    <select id="getBookByCollectionOrder" resultType="java.util.Map">
        select book_id bookId,book_name bookName,book_type_id bookTypeId,book.create_time createTime,author,
               ifnull(c.collectionNumber,0) collectionNumber
        from
            (
                select count(collected_id) collectionNumber,collected_id
                from collection
                where collection_type = '1'
                group by collected_id
            ) c right join book on book_id = c.collected_id
        where book.status = '0'
        order by c.collectionNumber desc
        limit 12
    </select>

    <select id="getBookByExpectOrder" resultType="java.util.Map">
        select b.book_id bookId, b.book_name bookName, b.book_type_id bookTypeId
             , b.status, b.author, b.contributor, b.img_url imgUrl,
               b.heat_degree heatDegree, b.create_time createTime, b.update_time updateTime, b.remark
        from book b left join
             (
                 select book_id,count(expect_id) expectNumber
                 from expect
                 where status = '0'
                 group by book_id
             ) e on e.book_id = b.book_id
        where b.status = '2'
        order by e.expectNumber desc
    </select>
</mapper>